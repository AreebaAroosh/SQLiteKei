<Application x:Class="SQLiteKei.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SQLiteKei"
             xmlns:views="clr-namespace:SQLiteKei.Views"
             StartupUri="Views/MainWindow.xaml"
             DispatcherUnhandledException="App_DispatcherUnhandledException">
    <Application.Resources>
        <!-- Global base styles -->
        <Style TargetType="{x:Type Window}">
            <Setter Property="Background" Value="#2D2D30" />
            <Setter Property="Icon" Value="../Resources/Icons/Logo_32x32.png" />
        </Style>

        <Style TargetType="{x:Type local:MainWindow}" BasedOn="{StaticResource {x:Type Window}}" />
        <Style TargetType="{x:Type views:Preferences}" BasedOn="{StaticResource {x:Type Window}}" />
        <Style TargetType="{x:Type views:QueryEditor}" BasedOn="{StaticResource {x:Type Window}}" />
        <Style TargetType="{x:Type views:SelectQueryWindow}" BasedOn="{StaticResource {x:Type Window}}" />
        <Style TargetType="{x:Type views:TableCreator}" BasedOn="{StaticResource {x:Type Window}}" />
        <Style TargetType="{x:Type views:About}" BasedOn="{StaticResource {x:Type Window}}" />

        <Style TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="#EEE" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="1" Background="{TemplateBinding Background}" BorderBrush="#3F3F46" BorderThickness="1" >
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#404045" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#555" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Combobox -->
        <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="18" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Border"
                                    Grid.ColumnSpan="2"
                                    CornerRadius="0"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1" />
                            <Path x:Name="Arrow" 
                                  Grid.Column="1"
                                  Fill="{TemplateBinding Foreground}"
                                  Stroke="{TemplateBinding Foreground}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M 0 0 L 4 4 L 8 0 Z"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="#2D2D30" />
            <Setter Property="Foreground" Value="#EEE" />
            <Setter Property="BorderBrush" Value="#3F3F46" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton
                                Name="ToggleButton"
                                Style="{StaticResource ComboBoxToggleButton}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Foreground="#54545e"
                                Grid.Column="2"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="3,1,18,1"
                                VerticalAlignment="Center" />
                            <Popup
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                Focusable="False"
                                PopupAnimation="Slide">
                                <Grid
                                  SnapsToDevicePixels="True"               
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border
                                        Background="#232324"
                                        BorderThickness="1"
                                        BorderBrush="#3F3F46"/>
                                    <ScrollViewer Margin="4 6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#3F3F46" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Name="Border"
                                Margin="0 1" Padding="5 0"
                                CornerRadius="0" Background="Transparent" BorderBrush="Transparent" >
                            <TextBlock>
                                <ContentPresenter />
                            </TextBlock>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#2D2D30"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- End of ComboBox styles -->
        
        <!-- DataGrid styles -->
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="#232324" />
            <Setter Property="Foreground" Value="#EEE" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="#1C1C1C" />
            <Setter Property="HorizontalGridLinesBrush" Value="#1C1C1C" />
            <Setter Property="VerticalGridLinesBrush" Value="#1C1C1C" />
        </Style>

        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background" Value="#2C2C2C" />
            <Setter Property="BorderBrush" Value="#1C1C1C" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FontWeight" Value="DemiBold" />
            <Setter Property="Padding" Value="5" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#1C1C1C" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="#2D2D30" />
        </Style>

        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="Margin" Value="2 0 0 0" />
        </Style>

        <!--End of DataGrid styles -->
        <Style TargetType="{x:Type GroupBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupBox">
                        <Grid Margin="4">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0"
                                    BorderThickness="1"
                                    BorderBrush="#3F3F46"
                                    Background="#2D2D30">
                                <Label Foreground="#EEE">
                                    <ContentPresenter Margin="1" ContentSource="Header" RecognizesAccessKey="True" />
                                </Label>
                            </Border>
                            <Border Grid.Row="1" 
                                    BorderThickness="1 0 1 1"
                                    BorderBrush="#3F3F46">
                                <ContentPresenter Margin="4"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Background" Value="#2D2D30" />
            <Setter Property="BorderBrush" Value="#3F3F46" />
            <Setter Property="Foreground" Value="#EEE" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0">
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TabControl Styles -->
        <Style TargetType="{x:Type TabControl}">
            <Setter Property="Background" Value="#232324" />
            <Setter Property="BorderBrush" Value="#3F3F46" />
        </Style>

        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="#EEE" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Header" BorderThickness="1 1 1 0">
                            <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="15 3" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Header" Property="Background" Value="#232324" />
                                <Setter TargetName="Header" Property="BorderBrush" Value="#3F3F46" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Header" Property="Background" Value="#2D2D30" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- End TabControl Styles -->

        <!-- Scrollbar Styles -->
        <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Panel.ZIndex" Value="1" />
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Width" Value="15" />
            <Setter Property="Height" Value="15" />
            <Setter Property="Opacity" Value="0.7" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Name="Border" 
                                Background="#2D2D30"
                                BorderBrush="#2D2D30"
                                BorderThickness="1">
                            <Path HorizontalAlignment="Center" VerticalAlignment="Center"
                                 Fill="White"
                                 Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#232324" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Panel.ZIndex" Value="0" />
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" CornerRadius="3" Opacity="0.2" BorderBrush="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="Panel.ZIndex" Value="1" />
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Opacity" Value="0.7" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Name="Border"
                                Background="#111" 
                                BorderBrush="Transparent" BorderThickness="1" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#3F3F46" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Border BorderBrush="#3F3F46" BorderThickness="1" Background="Transparent">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition MaxHeight="15" />
                        <RowDefinition Height="*" />
                        <RowDefinition MaxHeight="15" />
                    </Grid.RowDefinitions>
                    <RepeatButton Grid.Row="0"
                                  Style="{StaticResource ScrollBarButton}"
                                  Content="M 0 4 L 8 4 L 4 0 Z"
                                  Command="ScrollBar.LineUpCommand"/>
                    <Track Grid.Row="1" Name="PART_Track" IsDirectionReversed="True">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand"/>
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Style="{StaticResource ScrollBarThumb}" />
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand"/>
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton Grid.Row="2" 
                                  Style="{StaticResource ScrollBarButton}" 
                                  Content="M 0 0 L 4 4 L 8 0 Z"
                                  Command="ScrollBar.LineDownCommand"/>
                </Grid>
            </Border>
        </ControlTemplate>

        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Border BorderBrush="#3F3F46" BorderThickness="1" Background="Transparent">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MaxWidth="15" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition MaxWidth="15" />
                    </Grid.ColumnDefinitions>
                    <RepeatButton Grid.Column="0"
                                  Style="{StaticResource ScrollBarButton}"
                                  Command="ScrollBar.LineLeftCommand"
                                  Content="M 4 0 L 4 8 L 0 4 Z" />
                    <Track Grid.Column="1" Name="PART_Track" IsDirectionReversed="False">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand"/>
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Style="{StaticResource ScrollBarThumb}" />
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand"/>
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton Grid.Column="2"
                                  Style="{StaticResource ScrollBarButton}"
                                  Command="ScrollBar.LineRightCommand" 
                                  Content="M 0 0 L 4 4 L 0 8 Z"/>
                </Grid>
            </Border>
        </ControlTemplate>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="#3F3F46" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="10" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="10"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- This whole block is only necessary for the little rectangle thingy in the bottom right corner -->
        <Style TargetType="ScrollViewer">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollViewer">
                        <Border CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <ScrollContentPresenter x:Name="ScrollContentPresenter"
                                                  Cursor="{TemplateBinding Cursor}"
                                                  Margin="{TemplateBinding Padding}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"/>

                                <Rectangle Grid.Column="1" Grid.Row="1" Fill="#2D2D30"/>

                                <ScrollBar x:Name="PART_VerticalScrollBar" Width="18"
                                     IsTabStop="False"
                                     Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                     Grid.Column="1" Grid.Row="0" Orientation="Vertical"
                                     ViewportSize="{TemplateBinding ViewportHeight}"
                                     Maximum="{TemplateBinding ScrollableHeight}"
                                     Minimum="0"
                                     Value="{TemplateBinding VerticalOffset}"
                                     Margin="0,-1,-1,-1"/>

                                <ScrollBar x:Name="PART_HorizontalScrollBar" Height="18"
                                     IsTabStop="False"
                                     Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                     Grid.Column="0" Grid.Row="1" Orientation="Horizontal"
                                     ViewportSize="{TemplateBinding ViewportWidth}"
                                     Maximum="{TemplateBinding ScrollableWidth}"
                                     Minimum="0"
                                     Value="{TemplateBinding HorizontalOffset}"
                                     Margin="-1,0,-1,-1"/>

                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- End of Scrollbar Styles -->

        <Style TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="#EEE" />
        </Style>

        <!-- Individual custom styles -->
        <!-- Buttons-->
        <Style x:Key="ButtonLight" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="#2D2D30" />
        </Style>
        <Style x:Key="ButtonDark" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="#232324" />
        </Style>
        <!-- End of Buttons -->
        
        <Style x:Key="SelectableLabelTextBox" TargetType="TextBox">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#EEE" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="Padding" Value="3" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style x:Key="SelectableStatusBar" TargetType="TextBox">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#EEE" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="IsReadOnly" Value="True" />
        </Style>
    </Application.Resources>
</Application>
